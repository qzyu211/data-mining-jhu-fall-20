cauchy <- function(x, a, b) {
(1 / (pi * b)) * (1 / (1 + ((x - a) / b)^2))
}
a1 <- 3; a2 <- 2; b <- 5
xs <- seq(-5, 5, length.out = 1e3)
ys <- cauchy(x = xs, a = a1, b = b)
plot(xs, ys)
plot(xs, ys, type = 'l')
xs <- seq(-10, 50, length.out = 1e3)
ys <- cauchy(x = xs, a = a1, b = b)
plot(xs, ys, type = 'l')
xs <- seq(-50, 50, length.out = 1e3)
ys <- cauchy(x = xs, a = a1, b = b)
plot(xs, ys, type = 'l')
min(ys)
xs <- seq(-30, 50, length.out = 1e3)
ys <- cauchy(x = xs, a = a1, b = b)
plot(xs, ys, type = 'l')
xs <- seq(-30, 40, length.out = 1e3)
ys <- cauchy(x = xs, a = a1, b = b)
plot(xs, ys, type = 'l')
a1 <- 3; a2 <- 2; b <- 5; omega1 <- 0.5; omega2 <- 0.5
prob_x <- p_x(omega1 = omega2, omega2 = omega1)
a1 <- 3; a2 <- 2; b <- 5; p_omega1 <- 0.5; p_omega2 <- 0.5
p_x <- function(x, p_omega1, p_omega2, a1, a2, b) {
p_x_given_omega1 <- cauchy(x = x, a = a1, b = b)
p_x_given_omega2 <- cauchy(x = x, a = a2, b = b)
prob_x <- (p_x_given_omega1 * p_omega1) +
(p_x_given_omega2 * p_omega2)
return(prob_x)
}
prob_x <- p_x(x = xs,
p_omega1 = p_omega1, p_omega2 = p_omega2,
a1 = a1, a2 = a2, b = b)
prob_x
omega_given_x <- function(x, p_omega1, p_omega2,
a1 = a1, a2 = a2, b = b) {
# Calculate p(x)
prob_x <- p_x(x = x,
p_omega1 = p_omega1, p_omega2 = p_omega2,
a1 = a1, a2 = a2, b = b)
# Calculate p(x|omega_i)
p_x_given_omega <- cauchy(x = x, a = a1, b = b)
cond_prob <- (p_x_given_omega * p_omega1) / prob_x
return(cond_prob)
}
xs <- seq(-30, 40, length.out = 1e3)
ys <- omega_given_x(x = xs,
p_omega1 = p_omega1, p_omega2 = p_omega2,
a1 = a1, a2 = a2, b = b)
plot(xs, ys, type = 'l')
xs <- seq(-1e3, 1e3, length.out = 1e3)
ys <- omega_given_x(x = xs,
p_omega1 = p_omega1, p_omega2 = p_omega2,
a1 = a1, a2 = a2, b = b)
plot(xs, ys, type = 'l')
xs <- seq(-1e3, 1e2, length.out = 1e2)
ys <- omega_given_x(x = xs,
p_omega1 = p_omega1, p_omega2 = p_omega2,
a1 = a1, a2 = a2, b = b)
plot(xs, ys, type = 'l')
xs <- seq(-1e3, 1e3, length.out = 1e3)
ys <- omega_given_x(x = xs,
p_omega1 = p_omega1, p_omega2 = p_omega2,
a1 = a1, a2 = a2, b = b)
plot(xs, ys, type = 'l')
xs <- seq(-1e2, 1e2, length.out = 1e3)
ys <- omega_given_x(x = xs,
p_omega1 = p_omega1, p_omega2 = p_omega2,
a1 = a1, a2 = a2, b = b)
plot(xs, ys, type = 'l')
xs <- seq(-1e3, 1e3, length.out = 1e3)
ys <- omega_given_x(x = xs,
p_omega1 = p_omega1, p_omega2 = p_omega2,
a1 = a1, a2 = a2, b = b)
plot(xs, ys, type = 'l')
xs <- seq(-5e2, 5e2, length.out = 1e3)
ys <- omega_given_x(x = xs,
p_omega1 = p_omega1, p_omega2 = p_omega2,
a1 = a1, a2 = a2, b = b)
plot(xs, ys, type = 'l')
xs <- seq(-3e2, 3e2, length.out = 1e3)
ys <- omega_given_x(x = xs,
p_omega1 = p_omega1, p_omega2 = p_omega2,
a1 = a1, a2 = a2, b = b)
plot(xs, ys, type = 'l')
ys
head(ys)
tails(ys)
tail(ys)
library(latex2exp)
plot(xs, ys, type = 'l',
main = TeX('$P(\\omega_1 | x)$'))
plot(xs, ys, type = 'l',
main = TeX('$P(\\omega_1 | x) vs. x$'))
plot(xs, ys, type = 'l',
main = TeX('$P(\\omega_1 | x) \text{ vs. } x$'))
plot(xs, ys, type = 'l',
main = TeX('$P(\\omega_1 | x) \textit{ vs. } x$'))
plot(xs, ys, type = 'l',
main = TeX('$P(\\omega_1 | x) \textit{ vs. } x$'))
plot(xs, ys, type = 'l',
main = TeX('$P(\\omega_1 | x) \\textit{ vs. } x$'))
plot(xs, ys, type = 'l',
main = TeX('$P(\\omega_1 | x) \\text{ vs. } x$'))
it
plot(xs, ys, type = 'l',
main = TeX('$P(\\omega_1 | x) \\textit{ vs. } x$'))
plot(xs, ys, type = 'l',
main = TeX('$P(\\omega_1 | x) \\textit{  vs.  } x$'))
plot(xs, ys, type = 'l',
main = TeX('$P(\\omega_1 | x) \\; vs.\\; x$'))
plot(xs, ys, type = 'l',
main = TeX('$P(\\omega_1 | x) \\; vs.\\; x$'),
xlab = TeX('$x$'))
plot(xs, ys, type = 'l',
main = TeX('$P(\\omega_1 | x) \\; vs.\\; x$'),
xlab = TeX('$x$'), ylab = TeX('$P(\\omega_1 | x)$'))
?tan
### b
prob_error <- function(a1, a2, b) {
0.5 - (1 / pi) *  atan(abs((a2 - a1) / (2 * b)))
}
a1 <- 3; a2 <- 2; b <- 5
prob_error(a1 = a1, a2 = a2, b = b)
install.packages("plot3D")
library(plot3D)
prob_error_vectorize <- Vectorize(prob_error,
vectorize.args = c("a1", "a2", "b"))
### b
prob_error <- function(a1, a2, b) {
0.5 - (1 / pi) *  atan(abs((a2 - a1) / (2 * b)))
}
a1 <- 3; a2 <- 2; b <- 5
prob_error_vectorize <- Vectorize(prob_error,
vectorize.args = c("a1", "a2", "b"))
a1s <- seq(-10, 10, length.out = 1e3)
a2s <- seq(-10, 10, length.out = 1e3)
z <- outer(a1s, a2s, function(a1s, a2s)
prob_error_vectorize(a1 = a1s, a2 = a2s, b = b))
?persp3d
persp3d(a1s, a2s, z)
persp(a1s, a2s, z)
persp(a1s, a2s, z, col = "springgreen", shade = 0.3, ticktype = "detailed")
par(mfrow = c(2,2))
persp(a1s, a2s, z, theta=45, phi=35,
col = "springgreen", shade = 0.3, ticktype = "detailed")
a1s <- seq(-10, 10, length.out = 1e2)
a2s <- seq(-10, 10, length.out = 1e2)
z <- outer(a1s, a2s, function(a1s, a2s)
prob_error_vectorize(a1 = a1s, a2 = a2s, b = b))
par(mfrow = c(2,2))
persp(a1s, a2s, z, theta=45, phi=35,
col = "springgreen", shade = 0.3, ticktype = "detailed")
a1 <- 3; a2 <- 2; b <- 5
prob_error_vectorize <- Vectorize(prob_error,
vectorize.args = c("a1", "a2", "b"))
# b constant
a1s <- seq(-10, 10, length.out = 1e2)
a2s <- seq(-10, 10, length.out = 1e2)
z <- outer(a1s, a2s, function(a1s, a2s)
prob_error_vectorize(a1 = a1s, a2 = a2s, b = b))
# a1 constant
bs <- seq(-10, 10, length.out = 1e2)
y <- outer(a1s, a2s, function(a1s, a2s)
prob_error_vectorize(a1 = a1, a2 = a2s, b = bs))
# a2 constant
x <- outer(a1s, a2s, function(a1s, a2s)
prob_error_vectorize(a1 = a1s, a2 = a2, b = bs))
par(mfrow = c(2,2))
# b constant
a1s <- seq(-10, 10, length.out = 1e2)
a2s <- seq(-10, 10, length.out = 1e2)
z <- outer(a1s, a2s, function(a1s, a2s)
prob_error_vectorize(a1 = a1s, a2 = a2s, b = b))
# a1 constant
bs <- seq(-10, 10, length.out = 1e2)
y <- outer(bs, a2s, function(bs, a2s)
prob_error_vectorize(a1 = a1, a2 = a2s, b = bs))
# a2 constant
x <- outer(a1s, bs, function(a1s, bs)
prob_error_vectorize(a1 = a1s, a2 = a2, b = bs))
dev.off()
par(mfrow = c(2,2))
persp(a1s, a2s, z,
col = "springgreen", shade = 0.3, ticktype = "detailed")
persp(bs, a2s, y,
col = "springgreen", shade = 0.3, ticktype = "detailed")
persp(a1s, bs, x,
col = "springgreen", shade = 0.3, ticktype = "detailed")
dev.off()
prob_error2 <- function(x) {
0.5 - (1 / pi) *  atan(abs(x))
}
xs <- seq(-5, 5, length.out = 1e2)
plot(xs, prob_error2(xs))
plot(xs, prob_error2(xs), type = 'l')
xs <- seq(-5, 5, length.out = 1e3)
plot(xs, prob_error2(xs), type = 'l')
xs <- seq(-5e2, 5e2, length.out = 1e3)
plot(xs, prob_error2(xs), type = 'l')
xs <- seq(-5, 5, length.out = 1e3)
plot(xs, prob_error2(xs), type = 'l')
prob_error2 <- function(x) {
0.5 - (1 / pi) *  atan(abs(x))
}
xs <- seq(-5, 5, length.out = 1e3)
plot(xs, prob_error2(xs), type = 'l')
plot(xs, prob_error2(xs), type = 'l',
main = TeX('$P(error) \\; vs. \\; \\frac{a_2 - a_1}{b}$'), ylab = TeX('$P(error)$'))
plot(xs, prob_error2(xs), type = 'l',
main = TeX('$P(error) \\; vs. \\; \\frac{a_2 - a_1}{b}$'),
ylab = TeX('$P(error)$'), xlab = TeX('$\\frac{a_2 - a_1}{b}$'))
prob_error <- function(x) {
0.5 - (1 / pi) *  atan(abs(0.5 * x))
}
xs <- seq(-5, 5, length.out = 1e3)
plot(xs, prob_error2(xs), type = 'l',
main = TeX('$P(error) \\; vs. \\; \\frac{a_2 - a_1}{b}$'),
ylab = TeX('$P(error)$'), xlab = TeX('$\\frac{a_2 - a_1}{b}$'))
xs <- seq(-5, 5, length.out = 1e3)
plot(xs, prob_error(xs), type = 'l',
main = TeX('$P(error) \\; vs. \\; \\frac{a_2 - a_1}{b}$'),
ylab = TeX('$P(error)$'), xlab = TeX('$\\frac{a_2 - a_1}{b}$'))
plot(xs, prob_error(xs), type = 'l',
main = TeX('$P(error) \\; vs. \\; \\abs{\\frac{a_2 - a_1}{b}}$'),
ylab = TeX('$P(error)$'), xlab = TeX('$\\frac{a_2 - a_1}{b}$'))
plot(xs, prob_error(xs), type = 'l',
main = TeX('$P(error) \\; vs. \\; |{\\frac{a_2 - a_1}{b}|$'),
ylab = TeX('$P(error)$'), xlab = TeX('$\\frac{a_2 - a_1}{b}$'))
plot(xs, prob_error(xs), type = 'l',
main = TeX('$P(error) \\; vs. \\; \|{\\frac{a_2 - a_1}{b}\|$'),
ylab = TeX('$P(error)$'), xlab = TeX('$\\frac{a_2 - a_1}{b}$'))
plot(xs, prob_error(xs), type = 'l',
main = TeX('$P(error) \\; vs. \\; \\|{\\frac{a_2 - a_1}{b}\\|$'),
ylab = TeX('$P(error)$'), xlab = TeX('$\\frac{a_2 - a_1}{b}$'))
plot(xs, prob_error(xs), type = 'l',
main = TeX('$P(error) \\; vs. \\; \\frac{a_2 - a_1}{b}$'),
ylab = TeX('$P(error)$'), xlab = TeX('$\\frac{a_2 - a_1}{b}$'))
plot(xs, prob_error(xs), type = 'l',
main = TeX('$P(error) \\; vs. \\; | \\frac{a_2 - a_1}{b} | $'),
ylab = TeX('$P(error)$'), xlab = TeX('$\\frac{a_2 - a_1}{b}$'))
plot(xs, prob_error(xs), type = 'l',
main = TeX('$P(error) \\; vs. \\; | \\frac{a_2 - a_1}{b} | $'),
ylab = TeX('$P(error)$'), xlab = TeX('$ | \\frac{a_2 - a_1}{b} | $'))
prob_error <- function(x) {
x <- abs(x)
0.5 - (1 / pi) *  atan(0.5 * x)
}
xs <- seq(-5, 5, length.out = 1e3)
plot(xs, prob_error(xs), type = 'l',
main = TeX('$P(error) \\; vs. \\; | \\frac{a_2 - a_1}{b} | $'),
ylab = TeX('$P(error)$'), xlab = TeX('$ | \\frac{a_2 - a_1}{b} | $'))
max(prob_error(xs))

set.seed(666)
train_idx <- sample(seq(1,1e2), 50)
# data.train <- df[train,c('x','y')]
data.train <- data.frame(x = df[train_idx,c('x')],
y = df[train_idx,c('y')],
z = as.factor(df$z[train_idx]))
# data.train$z <- as.factor(df$z[train_idx])
data.test <- data.frame(x = df[-train_idx,'x'],
y = df[-train_idx,'y'],
z = as.factor(df$z[-train_idx]))
svm.linear <- svm(z~., data=data.train, kernel="linear", cost=10)
plot(svm.linear, data.train)
table(df$z[train_idx], predict(svm.linear, data.train))
svm.poly = svm(z~., data=data.train, kernel="polynomial", cost=1e4)
plot(svm.poly, data.train)
table(df$z[train_idx], predict(svm.poly, data.train))
svm.radial = svm(z~., data=data.train, kernel="radial", gamma=1, cost=10)
plot(svm.radial, data.train)
table(df$z[train_idx], predict(svm.radial, data.train))
svm.linear <- svm(z~., data=data.train, kernel="linear", cost=1e2)
plot(svm.linear, data.train)
table(df$z[train_idx], predict(svm.linear, data.train))
svm.linear <- svm(z~., data=data.train, kernel="linear", cost=10)
plot(svm.linear, data.train)
table(df$z[train_idx], predict(svm.linear, data.train))
svm.poly = svm(z~., data=data.train, kernel="polynomial", cost=1e4)
svm.linear <- svm(z~., data=data.train, kernel="linear", cost=50)
plot(svm.linear, data.train)
table(df$z[train_idx], predict(svm.linear, data.train))
svm.linear <- svm(z~., data=data.train, kernel="linear", cost=1e5)
plot(svm.linear, data.train)
table(df$z[train_idx], predict(svm.linear, data.train))
set.seed(666)
train_idx <- sample(seq(1,1e2), 50)
# data.train <- df[train,c('x','y')]
data.train <- data.frame(x = df[train_idx,c('x')],
y = df[train_idx,c('y')],
z = as.factor(df$z[train_idx]))
# data.train$z <- as.factor(df$z[train_idx])
data.test <- data.frame(x = df[-train_idx,'x'],
y = df[-train_idx,'y'],
z = as.factor(df$z[-train_idx]))
set.seed(111)
x1_class1 <- rnorm(50)
x1_class2 <- rnorm(50, mean = 0.5)
# x2_class1 <- 0.7 * x1_class1^(2) + 3.5 + rnorm(50)
# x2_class2 <- 0.7 * x1_class2^(2) + - 2.1 - rnorm(50)
x2_class1 <- 1.5 * x1_class1^(2) + 2 + runif(50)
x2_class2 <- 1.5 * x1_class2^(2) + - 2 - runif(50)
df <- data.frame(x = c(x1_class1, x1_class2),
y = c(x2_class1, x2_class2),
z = rep(c(1,2), each = 50))
# p11 <- ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
labs(title = 'Problem 4') +
theme_minimal() +
theme(aspect.ratio = 1, plot.title = element_text(hjust = 0.5), legend.position = "none")
ggplot(dat, aes(x.1, x.2, color = factor(y))) + geom_point() +
labs(title = 'Problem 4') +
theme_minimal() +
theme(aspect.ratio = 1, plot.title = element_text(hjust = 0.5), legend.position = "none")
# p11 <- ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
labs(title = 'Problem 4') +
theme_minimal() +
theme(aspect.ratio = 1, plot.title = element_text(hjust = 0.5), legend.position = "none")
set.seed(666)
train_idx <- sample(seq(1,1e2), 50)
# data.train <- df[train,c('x','y')]
data.train <- data.frame(x = df[train_idx,c('x')],
y = df[train_idx,c('y')],
z = as.factor(df$z[train_idx]))
# data.train$z <- as.factor(df$z[train_idx])
data.test <- data.frame(x = df[-train_idx,'x'],
y = df[-train_idx,'y'],
z = as.factor(df$z[-train_idx]))
svm.linear <- svm(z~., data=data.train, kernel="linear", cost=1e5)
plot(svm.linear, data.train)
table(df$z[train_idx], predict(svm.linear, data.train))
svm.poly = svm(z~., data=data.train, kernel="polynomial", cost=1e4)
plot(svm.poly, data.train)
# x2_class1 <- 0.7 * x1_class1^(2) + 3.5 + rnorm(50)
# x2_class2 <- 0.7 * x1_class2^(2) + - 2.1 - rnorm(50)
x2_class1 <- 1.5 * x1_class1^(2) + 2 + runif(50)
set.seed(111)
x1_class1 <- rnorm(50)
x1_class2 <- rnorm(50, mean = 0.5)
# x2_class1 <- 0.7 * x1_class1^(2) + 3.5 + rnorm(50)
# x2_class2 <- 0.7 * x1_class2^(2) + - 2.1 - rnorm(50)
x2_class1 <- 1.5 * x1_class1^(2) + 2 + runif(50)
x2_class2 <- 1.5 * x1_class2^(2) + - 1.5 - runif(50)
df <- data.frame(x = c(x1_class1, x1_class2),
y = c(x2_class1, x2_class2),
z = rep(c(1,2), each = 50))
# p11 <- ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
labs(title = 'Problem 4') +
theme_minimal() +
theme(aspect.ratio = 1, plot.title = element_text(hjust = 0.5), legend.position = "none")
# x2_class1 <- 0.7 * x1_class1^(2) + 3.5 + rnorm(50)
# x2_class2 <- 0.7 * x1_class2^(2) + - 2.1 - rnorm(50)
x2_class1 <- 1.5 * x1_class1^(2) + 1.5 + runif(50)
x2_class2 <- 1.5 * x1_class2^(2) + - 1.5 - runif(50)
df <- data.frame(x = c(x1_class1, x1_class2),
y = c(x2_class1, x2_class2),
z = rep(c(1,2), each = 50))
# p11 <- ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
labs(title = 'Problem 4') +
theme_minimal() +
theme(aspect.ratio = 1, plot.title = element_text(hjust = 0.5), legend.position = "none")
set.seed(111)
x1_class1 <- rnorm(50)
x1_class2 <- rnorm(50, mean = 0.5)
# x2_class1 <- 0.7 * x1_class1^(2) + 3.5 + rnorm(50)
# x2_class2 <- 0.7 * x1_class2^(2) + - 2.1 - rnorm(50)
x2_class1 <- 1.5 * x1_class1^(2) + 0.5 + runif(50)
x2_class2 <- 1.5 * x1_class2^(2) + - 0.5 - runif(50)
df <- data.frame(x = c(x1_class1, x1_class2),
y = c(x2_class1, x2_class2),
z = rep(c(1,2), each = 50))
# p11 <- ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
labs(title = 'Problem 4') +
theme_minimal() +
theme(aspect.ratio = 1, plot.title = element_text(hjust = 0.5), legend.position = "none")
set.seed(666)
train_idx <- sample(seq(1,1e2), 50)
# data.train <- df[train,c('x','y')]
data.train <- data.frame(x = df[train_idx,c('x')],
y = df[train_idx,c('y')],
z = as.factor(df$z[train_idx]))
# data.train$z <- as.factor(df$z[train_idx])
data.test <- data.frame(x = df[-train_idx,'x'],
y = df[-train_idx,'y'],
z = as.factor(df$z[-train_idx]))
svm.linear <- svm(z~., data=data.train, kernel="linear", cost=1e5)
plot(svm.linear, data.train)
table(df$z[train_idx], predict(svm.linear, data.train))
svm.poly = svm(z~., data=data.train, kernel="polynomial", cost=1e4)
plot(svm.poly, data.train)
table(df$z[train_idx], predict(svm.poly, data.train))
svm.radial = svm(z~., data=data.train, kernel="radial", gamma=1, cost=10)
plot(svm.radial, data.train)
table(df$z[train_idx], predict(svm.radial, data.train))
plot(svm.linear, data.test)
plot(svm.poly, data.test)
plot(svm.radial, data.test)
table(df$z[-train_idx], predict(svm.linear, data.test))
table(df$z[-train_idx], predict(svm.poly, data.test))
table(df$z[-train_idx], predict(svm.radial, data.test))
set.seed(666)
train_idx <- sample(seq(1,1e2), 80)
# data.train <- df[train,c('x','y')]
data.train <- data.frame(x = df[train_idx,c('x')],
y = df[train_idx,c('y')],
z = as.factor(df$z[train_idx]))
# data.train$z <- as.factor(df$z[train_idx])
data.test <- data.frame(x = df[-train_idx,'x'],
y = df[-train_idx,'y'],
z = as.factor(df$z[-train_idx]))
svm.linear <- svm(z~., data=data.train, kernel="linear", cost=1e5)
plot(svm.linear, data.train)
table(df$z[train_idx], predict(svm.linear, data.train))
svm.poly = svm(z~., data=data.train, kernel="polynomial", cost=1e4)
plot(svm.poly, data.train)
table(df$z[train_idx], predict(svm.poly, data.train))
svm.radial = svm(z~., data=data.train, kernel="radial", gamma=1, cost=10)
plot(svm.radial, data.train)
table(df$z[train_idx], predict(svm.radial, data.train))
plot(svm.linear, data.test)
plot(svm.poly, data.test)
plot(svm.radial, data.test)
table(df$z[-train_idx], predict(svm.linear, data.test))
table(df$z[-train_idx], predict(svm.poly, data.test))
table(df$z[-train_idx], predict(svm.radial, data.test))
### Problem 4
set.seed(111)
x1_class1 <- rnorm(50)
x1_class2 <- rnorm(50, mean = 0.5)
x2_class1 <- 1.5 * x1_class1^(2) + 0.5 + runif(50)
x2_class2 <- 1.5 * x1_class2^(2) + - 0.5 - runif(50)
df <- data.frame(x = c(x1_class1, x1_class2),
y = c(x2_class1, x2_class2),
z = rep(c(1,2), each = 50))
# p11 <- ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
labs(title = 'Problem 4') +
theme_minimal() +
theme(aspect.ratio = 1, plot.title = element_text(hjust = 0.5), legend.position = "none")
# set.seed(666)
train_idx <- sample(seq(1,1e2), 80)
# data.train <- df[train,c('x','y')]
data.train <- data.frame(x = df[train_idx,c('x')],
y = df[train_idx,c('y')],
z = as.factor(df$z[train_idx]))
# data.train$z <- as.factor(df$z[train_idx])
data.test <- data.frame(x = df[-train_idx,'x'],
y = df[-train_idx,'y'],
z = as.factor(df$z[-train_idx]))
svm.linear <- svm(z~., data=data.train, kernel="linear", cost=1e5)
plot(svm.linear, data.train)
table(df$z[train_idx], predict(svm.linear, data.train))
svm.poly = svm(z~., data=data.train, kernel="polynomial", cost=1e4)
plot(svm.poly, data.train)
set.seed(666)
train_idx <- sample(seq(1,1e2), 80)
# data.train <- df[train,c('x','y')]
data.train <- data.frame(x = df[train_idx,c('x')],
y = df[train_idx,c('y')],
z = as.factor(df$z[train_idx]))
# data.train$z <- as.factor(df$z[train_idx])
data.test <- data.frame(x = df[-train_idx,'x'],
y = df[-train_idx,'y'],
z = as.factor(df$z[-train_idx]))
svm.linear <- svm(z~., data=data.train, kernel="linear", cost=1e5)
plot(svm.linear, data.train)
table(df$z[train_idx], predict(svm.linear, data.train))
svm.poly = svm(z~., data=data.train, kernel="polynomial", cost=1e4)
plot(svm.poly, data.train)
table(df$z[train_idx], predict(svm.poly, data.train))
svm.radial = svm(z~., data=data.train, kernel="radial", gamma=1, cost=10)
plot(svm.radial, data.train)
table(df$z[train_idx], predict(svm.radial, data.train))
plot(svm.linear, data.test)
plot(svm.poly, data.test)
plot(svm.radial, data.test)
table(df$z[-train_idx], predict(svm.linear, data.test))
table(df$z[-train_idx], predict(svm.poly, data.test))
table(df$z[-train_idx], predict(svm.radial, data.test))
### Problem 4
set.seed(111)
x1_class1 <- rnorm(50)
x1_class2 <- rnorm(50, mean = 0.5)
x2_class1 <- 1.5 * x1_class1^(2) + 0.5 + runif(50)
x2_class2 <- 1.5 * x1_class2^(2) + - 0.5 - runif(50)
df <- data.frame(x = c(x1_class1, x1_class2),
y = c(x2_class1, x2_class2),
z = rep(c(1,2), each = 50))
p11 <- ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
# ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
labs(title = 'Problem 4') +
theme_minimal() +
theme(aspect.ratio = 1, plot.title = element_text(hjust = 0.5), legend.position = "none")
p11
p11 <- ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
labs(x = expression(x[1]), y = expression(x[2]), title = 'Problem 4') +
theme_minimal() +
theme(aspect.ratio = 1, plot.title = element_text(hjust = 0.5), legend.position = "none")
p11
p11 <- ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
labs(x = expression(x[1]), y = expression(x[2]), title = 'Problem 4') +
# theme_minimal() +
theme(aspect.ratio = 1, plot.title = element_text(hjust = 0.5), legend.position = "none")
p11
p11 <- ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
labs(x = expression(x[1]), y = expression(x[2]), title = 'Problem 4') +
theme_minimal() +
theme(aspect.ratio = 1, plot.title = element_text(hjust = 0.5), legend.position = "none")
p11 <- ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
labs(x = expression(x[1]), y = expression(x[2]), title = 'Problem 4') +
theme_minimal() +
theme(aspect.ratio = 0.5, plot.title = element_text(hjust = 0.5), legend.position = "none")
p11
p11 <- ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
labs(x = expression(x[1]), y = expression(x[2]), title = 'Problem 4') +
theme_minimal() +
theme(aspect.ratio = 0.7, plot.title = element_text(hjust = 0.5), legend.position = "none")
p11
p11 <- ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
labs(x = expression(x[1]), y = expression(x[2]), title = 'Problem 4') +
theme_minimal() +
theme(aspect.ratio = 0.6, plot.title = element_text(hjust = 0.5), legend.position = "none")
p11
p11 <- ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
labs(x = expression(x[1]), y = expression(x[2]), title = 'Problem 4') +
theme_minimal() +
theme(aspect.ratio = 0.55, plot.title = element_text(hjust = 0.5), legend.position = "none")
p11
p11 <- ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
labs(x = expression(x[1]), y = expression(x[2]), title = 'Problem 4') +
theme_minimal() +
theme(aspect.ratio = 0.55, plot.title = element_text(hjust = 0.5))
p11
p11 <- ggplot(df, aes(x, y, color = factor(z))) + geom_point() +
labs(x = expression(x[1]), y = expression(x[2]), title = 'Problem 4') +
theme_minimal() +
theme(aspect.ratio = 0.55, plot.title = element_text(hjust = 0.5)) +
guides(shape = FALSE,
colour = guide_legend(override.aes = list(
fill = c("#99FF33", "#3300FF"),
size = c(3, 3),
shape = c(16, 16))))
p11
p11 <- ggplot(df, aes(x, y, color = factor(z))) +
geom_point() +
scale_color_manual(values=c("#0099FF", "#CC0033"), name = 'Class Label') +
theme_minimal() +
theme(aspect.ratio = 0.55, plot.title = element_text(hjust = 0.5)) +
labs(x = expression(x[1]), y = expression(x[2]), title = 'Problem 4') #+
p11
df
set.seed(666)
train_idx <- sample(seq(1,1e2), 80)
# data.train <- df[train,c('x','y')]
data.train <- data.frame(x = df[train_idx,c('x')],
y = df[train_idx,c('y')],
z = as.factor(df$z[train_idx]))
# data.train$z <- as.factor(df$z[train_idx])
data.test <- data.frame(x = df[-train_idx,'x'],
y = df[-train_idx,'y'],
z = as.factor(df$z[-train_idx]))
svm.linear <- svm(z~., data=data.train, kernel="linear", cost=1e5)
plot(svm.linear, data.train)
table(df$z[train_idx], predict(svm.linear, data.train))
svm.poly = svm(z~., data=data.train, kernel="polynomial", cost=1e4)
plot(svm.poly, data.train)
table(df$z[train_idx], predict(svm.poly, data.train))
svm.radial = svm(z~., data=data.train, kernel="radial", gamma=1, cost=10)
plot(svm.radial, data.train)
table(df$z[train_idx], predict(svm.radial, data.train))
plot(svm.linear, data.test)
plot(svm.poly, data.test)
plot(svm.radial, data.test)
# data.test <- df[-train,c('x','y')]
# data.test$z <- as.factor(df$z[-train_idx])
par(mfrow = c(2,3))
svm.linear <- svm(z~., data=data.train, kernel="linear", cost=1e5)
plot(svm.linear, data.train)
table(df$z[train_idx], predict(svm.linear, data.train))
svm.poly = svm(z~., data=data.train, kernel="polynomial", cost=1e4)
plot(svm.poly, data.train)
table(df$z[train_idx], predict(svm.poly, data.train))
svm.radial = svm(z~., data=data.train, kernel="radial", gamma=1, cost=10)
plot(svm.radial, data.train)
table(df$z[train_idx], predict(svm.radial, data.train))
plot(svm.linear, data.test)
plot(svm.poly, data.test)
svm.linear <- svm(z~., data=data.train, kernel="linear", cost=10)
plot(svm.linear, data.train)
set.seed(666)
train_idx <- sample(seq(1,1e2), 80)
data.train <- data.frame(x = df[train_idx,c('x')],
y = df[train_idx,c('y')],
z = as.factor(df$z[train_idx]))
data.test <- data.frame(x = df[-train_idx,'x'],
y = df[-train_idx,'y'],
z = as.factor(df$z[-train_idx]))
svm.linear <- svm(z~., data=data.train, kernel="linear", cost=10)
plot(svm.linear, data.train)
dev.off()
plot(svm.linear, data.train)
table(df$z[train_idx], predict(svm.linear, data.train))
svm.poly = svm(z~., data=data.train, kernel="polynomial", cost=10)
plot(svm.poly, data.train)
table(df$z[train_idx], predict(svm.poly, data.train))
svm.radial = svm(z~., data=data.train, kernel="radial", gamma=1, cost=10)
plot(svm.radial, data.train)
table(df$z[train_idx], predict(svm.radial, data.train))
plot(svm.linear, data.test)
plot(svm.poly, data.test)
plot(svm.radial, data.test)
table(df$z[-train_idx], predict(svm.linear, data.test))
table(df$z[-train_idx], predict(svm.poly, data.test))
table(df$z[-train_idx], predict(svm.radial, data.test))
l1 <- plot(svm.linear, data.train)
ply1 <- plot(svm.poly, data.train)
gridExtra::grid.arrange(l1, ply1)
plot(svm.linear, data.train)
plot(svm.poly, data.train)
plot(svm.radial, data.train)
plot(svm.linear, data.train)
plot(svm.poly, data.train)
plot(svm.radial, data.train)
plot(svm.linear, data.test)
plot(svm.poly, data.test)
plot(svm.radial, data.test)
table(df$z[train_idx], predict(svm.linear, data.train))
table(df$z[train_idx], predict(svm.poly, data.train))
table(df$z[train_idx], predict(svm.radial, data.train))
table(df$z[-train_idx], predict(svm.linear, data.test))
table(df$z[-train_idx], predict(svm.poly, data.test))
table(df$z[-train_idx], predict(svm.radial, data.test))
library(cvms)
install.packages('cvms')
install.packages("cvms")
library(cvms)
library(tibble)
linear_cm <- tibble("target"=df$z[-train_idx],
"prediction"=predict(svm.linear, data.test))
predict(svm.linear, data.test)
table(df$z[-train_idx], predict(svm.linear, data.test))
library(tidyverse); library(e1071); library(cvms); library(tibble)
### Problem 4
set.seed(111)
x1_class1 <- rnorm(50)
x1_class2 <- rnorm(50, mean = 0.5)
x2_class1 <- 1.5 * x1_class1^(2) + 0.5 + runif(50)
x2_class2 <- 1.5 * x1_class2^(2) + - 0.5 - runif(50)
df <- data.frame(x = c(x1_class1, x1_class2),
y = c(x2_class1, x2_class2),
z = rep(c(1,2), each = 50))
p11 <- ggplot(df, aes(x, y, color = factor(z))) +
geom_point() +
scale_color_manual(values=c("#0099FF", "#CC0033"), name = 'Class Label') +
theme_minimal() +
theme(aspect.ratio = 0.55, plot.title = element_text(hjust = 0.5)) +
labs(x = expression(x[1]), y = expression(x[2]), title = 'Problem 4')
set.seed(666)
train_idx <- sample(seq(1,1e2), 80)
data.train <- data.frame(x = df[train_idx,c('x')],
y = df[train_idx,c('y')],
z = as.factor(df$z[train_idx]))
data.test <- data.frame(x = df[-train_idx,'x'],
y = df[-train_idx,'y'],
z = as.factor(df$z[-train_idx]))
svm.linear <- svm(z~., data=data.train, kernel="linear", cost=10)
plot(svm.linear, data.train)
table(df$z[train_idx], predict(svm.linear, data.train))
svm.poly = svm(z~., data=data.train, kernel="polynomial", cost=10)
plot(svm.poly, data.train)
table(df$z[train_idx], predict(svm.poly, data.train))
svm.radial = svm(z~., data=data.train, kernel="radial", gamma=1, cost=10)
plot(svm.radial, data.train)
table(df$z[train_idx], predict(svm.radial, data.train))
plot(svm.linear, data.test)
plot(svm.poly, data.test)
plot(svm.radial, data.test)
table(df$z[-train_idx], predict(svm.linear, data.test))
table(df$z[-train_idx], predict(svm.poly, data.test))
table(df$z[-train_idx], predict(svm.radial, data.test))
linear_cm <- tibble("target"=df$z[-train_idx],
"prediction"=predict(svm.linear, data.test))
table(linear_cm)
"prediction"=predict(svm.linear, data.test)))
"prediction"=predict(svm.linear, data.test))
linear_cm <- tibble("target"=df$z[-train_idx],
"prediction"=predict(svm.linear, data.test))
tidy(table(tibble("target"=df$z[-train_idx],
"prediction"=predict(svm.linear, data.test))))
library(broom)
tidy(table(tibble("target"=df$z[-train_idx],
"prediction"=predict(svm.linear, data.test))))
linear_cm <- tidy(table(tibble("target"=df$z[-train_idx],
"prediction"=predict(svm.linear, data.test))))
plot_confusion_matrix(linear_cm,
targets_col = "target",
predictions_col = "prediction",
counts_col = "n")
poly_cm <- tidy(table(tibble("target"=df$z[-train_idx],
"prediction"=predict(svm.poly, data.test))))
plot_confusion_matrix(poly_cm,
targets_col = "target",
predictions_col = "prediction",
counts_col = "n")
radial_cm <- tidy(table(tibble("target"=df$z[-train_idx],
"prediction"=predict(svm.radial, data.test))))
plot_confusion_matrix(radial_cm,
targets_col = "target",
predictions_col = "prediction",
counts_col = "n")
linear_cm_train <- tidy(table(tibble("target"=df$z[train_idx],
"prediction"=predict(svm.linear, data.train))))
linear_cm_train <- tidy(table(tibble("target"=df$z[train_idx],
"prediction"=predict(svm.linear, data.train))))
plot_confusion_matrix(linear_cm_train,
targets_col = "target",
predictions_col = "prediction",
counts_col = "n")
poly_cm_train <- tidy(table(tibble("target"=df$z[train_idx],
"prediction"=predict(svm.poly, data.train))))
plot_confusion_matrix(poly_cm_train,
targets_col = "target",
predictions_col = "prediction",
counts_col = "n")
radial_cm_train <- tidy(table(tibble("target"=df$z[train_idx],
"prediction"=predict(svm.radial, data.train))))
plot_confusion_matrix(radial_cm_train,
targets_col = "target",
predictions_col = "prediction",
counts_col = "n")
### Problem 4
set.seed(111)
x1_class1 <- rnorm(50)
x1_class2 <- rnorm(50, mean = 0.5)
x2_class1 <- 1.5 * x1_class1^(2) + 0.5 + runif(50)
x2_class2 <- 1.5 * x1_class2^(2) + - 0.5 - runif(50)
df <- data.frame(x = c(x1_class1, x1_class2),
y = c(x2_class1, x2_class2),
z = rep(c(1,2), each = 50))
p11 <- ggplot(df, aes(x, y, color = factor(z))) +
geom_point() +
scale_color_manual(values=c("#0099FF", "#CC0033"), name = 'Class Label') +
theme_minimal() +
theme(aspect.ratio = 0.55, plot.title = element_text(hjust = 0.5)) +
labs(x = expression(x[1]), y = expression(x[2]), title = 'Problem 4')
### Problem 4
set.seed(111)
x1_class1 <- rnorm(50)
x1_class2 <- rnorm(50, mean = 0.5)
x2_class1 <- 1.5 * x1_class1^(2) + 0.5 + runif(50)
x2_class2 <- 1.5 * x1_class2^(2) + - 0.5 - runif(50)
df <- data.frame(x = c(x1_class1, x1_class2),
y = c(x2_class1, x2_class2),
z = rep(c(1,2), each = 50))
p11 <- ggplot(df, aes(x, y, color = factor(z))) +
geom_point() +
scale_color_manual(values=c("#0099FF", "#CC0033"), name = 'Class Label') +
theme_minimal() +
theme(aspect.ratio = 0.55, plot.title = element_text(hjust = 0.5)) +
labs(x = expression(x[1]), y = expression(x[2]), title = 'Problem 4')
p11

install.packages('mvnorm')
install.packages('mvtnorm')
library(mvtnorm)
install.packages('mclust')
library(mclust)
library(e1071)
mu1 <- matrix(c(2,0), nrow=2)
mu2 <- matrix(c(-2,0), nrow=2)
mu1
mu_1 <- matrix(c(2,0), nrow=2)
mu_2 <- matrix(c(-2,0), nrow=2)
sigma_1 <- matrix(c(1, 0, 0, 1), nrow=2);
sigma_1
P <- (1 / 2) * matrix(c(sqrt(3), 1, -1, sqrt(3)), ncol=2);
P
D <- matrix(c(9, 0, 0, 4), nrow=2);
D
sigma_2 <- P %*% D %*% t(P)
sigma_2
n = 1e3
set.seed(1)
n <- 1e3
sample_1 <- mvrnorm(n, mu_1, sigma_1)
sample_2 <- mvrnorm(n, mu_2, sigma_2)
library(mvtnorm)
sample_2 <- mvrnorm(n, mu_2, sigma_2)
?mvtnorm::rmvnorm
sample_1 <- rmvrnorm(n, mu_1, sigma_1)
sample_2 <- rmvrnorm(n, mu_2, sigma_2)
set.seed(1)
n <- 1e3
sample_1 <- rmvnorm(n = n, mean = mu_1, sigma = sigma_1)
sample_2 <- rmvnorm(n = n, mean = mu_2, sigma = sigma_2)
sample_data <- rbind(sample_1, sample_2)
?kmeans
head(sample_data)
k_mean_clustering <- kmeans(sample_data)
k_mean_clustering <- kmeans(x = sample_data, centers = 2)
k_mean_clustering
plot(x = sample_data[,1], y = sample_data[,2])
points(k_mean_clustering$centers)
points(k_mean_clustering$centers, col = 'red')
k_mean_clustering <- kmeans(x = sample_1, centers = 2)
plot(x = sample_1[,1], y = sample_1[,2])
points(k_mean_clustering$centers, col = 'red')
k_mean_clustering <- kmeans(x = sample_data, centers = 2)
plot(x = sample_data[,1], y = sample_data[,2])
points(k_mean_clustering$centers, col = 'red')
points(k_mean_clustering$centers, col = 'red', pch = 2)
points(k_mean_clustering$centers, col = 'red', pch = 3)
points(k_mean_clustering$centers, col = 'red', pch = 4)
points(k_mean_clustering$centers, col = 'red', pch = 19)
k_mean_clustering <- kmeans(x = sample_data, centers = 2)
plot(x = sample_data[,1], y = sample_data[,2])
points(k_mean_clustering$centers, col = 'red', pch = 19)
rep('red', 1e3)
plot(x = sample_data[,1], y = sample_data[,2],
col = c(rep('red', 1e3), rep('blue', 1e3)))
points(k_mean_clustering$centers, col = 'black', pch = 19)
points(k_mean_clustering$centers, col = 'green', pch = 19)
fuzzy_k_mean_clustering <- cmeans(x = sample_data, centers = 2)
# k-means
par(mfrow = c(1,2))
k_mean_clustering <- kmeans(x = sample_data, centers = 2)
plot(x = sample_data[,1], y = sample_data[,2],
col = c(rep('red', 1e3), rep('blue', 1e3)))
points(k_mean_clustering$centers, col = 'green', pch = 19)
plot(x = sample_data[,1], y = sample_data[,2],
col=k_mean_clustering$cluster)
points(k_mean_clustering$centers, col=1:n);
points(k_mean_clustering$centers, col = 'green', pch = 19)
fuzzy_k_mean_clustering <- cmeans(x = sample_data, centers = 2)
plot(x = sample_data[,1], y = sample_data[,2],
col = c(rep('red', 1e3), rep('blue', 1e3)))
points(fuzzy_k_mean_clustering$centers, col = 'green', pch = 19)
plot(x = sample_data[,1], y = sample_data[,2],
col=fuzzy_k_mean_clustering$cluster)
points(fuzzy_k_mean_clustering$centers, col = 'green', pch = 19)
?em
?Mclust
# EM
em_clustering = Mclust(data = sample_data, G = 2)
em_clustering
plot.Mclust(em_clustering, what="classification", colors=2)
plot.Mclust(em_clustering, what="classification", colors=1:2)
# EM
dev.off()
plot.Mclust(em_clustering, what="classification", colors=1:2)
plot.Mclust(em_clustering, what="classification", colors=3:4)
?plot.Mclust
# k-means
par(mfrow = c(1,2))
k_mean_clustering <- kmeans(x = sample_data, centers = 2)
plot(x = sample_data[,1], y = sample_data[,2],
col = c(rep('red', 1e3), rep('blue', 1e3)))
points(k_mean_clustering$centers, col = 'green', pch = 19)
plot(x = sample_data[,1], y = sample_data[,2],
col=k_mean_clustering$cluster)
points(k_mean_clustering$centers, col = 'green', pch = 19)
k_mean_clustering$centers
k_mean_clustering$cluster
tail(k_mean_clustering$cluster)
k_mean_clustering$cluster == c(rep(1, 1e3), rep(2, 1e3))
sum(k_mean_clustering$cluster == c(rep(1, 1e3), rep(2, 1e3)))
sum(k_mean_clustering$cluster == c(rep(1, 1e3), rep(2, 1e3))) / 2e3
#
1 - sum(k_mean_clustering$cluster == c(rep(1, 1e3), rep(2, 1e3))) / 2e3
# Error rate
sum(k_mean_clustering$cluster != c(rep(1, 1e3), rep(2, 1e3))) / 2e3
sum(fuzzy_k_mean_clustering$cluster != c(rep(1, 1e3), rep(2, 1e3))) / 2e3
em_clustering$call
em_clustering$n
em_clustering$d
em_clustering$G
em_clustering$classification
sum(em_clustering$classification != c(rep(1, 1e3), rep(2, 1e3))) / 2e3
plot(x = sample_data[,1], y = sample_data[,2],
col = c(rep('red', 1e3), rep('blue', 1e3)),
main = 'Sample Data Colored by Class with Centers',
xlab = '', ylab = '')
plot(x = sample_data[,1], y = sample_data[,2],
col = c(rep('red', 1e3), rep('blue', 1e3)),
main = 'Sample Data Colored by Class with Centers',
xlab = 'x1', ylab = 'x2')
plot(x = sample_data[,1], y = sample_data[,2],
col = c(rep('red', 1e3), rep('blue', 1e3)),
main = 'Sample Data Colored by Class with Centers',
xlab = 'x1', ylab = 'x2')
points(k_mean_clustering$centers, col = 'green', pch = 19)
plot(x = sample_data[,1], y = sample_data[,2],
col=k_mean_clustering$cluster,
main = 'Sample Data Colored by Classification',
xlab = 'x1', ylab = 'x2')
points(k_mean_clustering$centers, col = 'green', pch = 19)
plot(x = sample_data[,1], y = sample_data[,2],
col=k_mean_clustering$cluster,
main = 'Sample Data After k-Means Classification',
xlab = 'x1', ylab = 'x2')
dev.off()
# k-means
par(mfrow = c(1,2))
k_mean_clustering <- kmeans(x = sample_data, centers = 2)
plot(x = sample_data[,1], y = sample_data[,2],
col = c(rep('red', 1e3), rep('blue', 1e3)),
main = 'Sample Data Colored by Class with Centers',
xlab = 'x1', ylab = 'x2')
points(k_mean_clustering$centers, col = 'green', pch = 19)
plot(x = sample_data[,1], y = sample_data[,2],
col=k_mean_clustering$cluster,
main = 'Sample Data After k-Means Classification',
xlab = 'x1', ylab = 'x2')
points(k_mean_clustering$centers, col = 'green', pch = 19)
plot(x = sample_data[,1], y = sample_data[,2],
col = c(rep('red', 1e3), rep('blue', 1e3)),
main = 'Sample Data Colored by Class with Centers',
xlab = 'x1', ylab = 'x2')
points(fuzzy_k_mean_clustering$centers, col = 'green', pch = 19)
plot(x = sample_data[,1], y = sample_data[,2],
col=fuzzy_k_mean_clustering$cluster,
main = 'Sample Data After Fuzzy k-Means Classification',
xlab = 'x1', ylab = 'x2')
points(fuzzy_k_mean_clustering$centers, col = 'green', pch = 19)
plot.Mclust(em_clustering, what="classification", colors=3:4)
# EM
dev.off()
plot.Mclust(em_clustering, what="classification", colors=3:4)
plot.Mclust(em_clustering, what="classification", colors=c('red', 'black'))
plot.Mclust(em_clustering, what="classification", colors=c('black', 'red'))
em_clustering$parameters
em_clustering$parameters$mean
plot(x = sample_data[,1], y = sample_data[,2],
col = c(rep('red', 1e3), rep('blue', 1e3)),
main = 'Sample Data Colored by Class with Centers',
xlab = 'x1', ylab = 'x2')
fuzzy_k_mean_clustering$centers
points(em_clustering$parameters$mean, col = 'green', pch = 19)
points(t(em_clustering$parameters$mean), col = 'green', pch = 19)
# k-means
par(mfrow = c(1,2))
plot(x = sample_data[,1], y = sample_data[,2],
col = c(rep('red', 1e3), rep('blue', 1e3)),
main = 'Sample Data Colored by Class with Centers',
xlab = 'x1', ylab = 'x2')
points(t(em_clustering$parameters$mean), col = 'green', pch = 19)
plot.Mclust(em_clustering, what="classification", colors=c('black', 'red'))
plot.Mclust(em_clustering, what="classification", colors=c('yellow', 'red'))
plot.Mclust(em_clustering, what="classification", colors=c('yellow', 'red'), pch=c(19,19))
em_clustering$classification
plot(x = sample_data[,1], y = sample_data[,2],
col=em_clustering$classification,
main = 'Sample Data After Fuzzy k-Means Classification',
xlab = 'x1', ylab = 'x2')
plot(x = sample_data[,1], y = sample_data[,2],
col = c(rep('red', 1e3), rep('blue', 1e3)),
main = 'Sample Data Colored by Class with Centers',
xlab = 'x1', ylab = 'x2')
plot(x = sample_data[,1], y = sample_data[,2],
col = c(rep('red', 1e3), rep('blue', 1e3)),
main = 'Sample Data Colored by Class with Centers',
xlab = 'x1', ylab = 'x2')
points(t(em_clustering$parameters$mean), col = 'green', pch = 19)
plot(x = sample_data[,1], y = sample_data[,2],
col=em_clustering$classification,
main = 'Sample Data After EM Classification',
xlab = 'x1', ylab = 'x2')
points(t(em_clustering$parameters$mean), col = 'green', pch = 19)
?Mclust
# Center comparison
k_mean_clustering$centers
fuzzy_k_mean_clustering$centers
t(em_clustering$parameters$mean)
# Center comparison
round(k_mean_clustering$centers, 4)
# Center comparison
round(k_mean_clustering$centers, 4)
round(fuzzy_k_mean_clustering$centers, 4)
round(t(em_clustering$parameters$mean), 4)
